name: Run all scrapers and merge (PR auto-merge)
on:
  workflow_dispatch:
  schedule:
    - cron: '0 */12 * * *'
permissions:
  contents: write
  pull-requests: write
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_scraper.txt
      - name: Run all scrapers
        env:
          SERPER_API_KEY: ${{ secrets.SERPER_API_KEY }}
        run: python run_all.py
      - name: Configure Git and check changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin main
          git reset --hard origin/main
      - name: Check if file changed
        id: changes
        run: |
          git add .
          if git diff --staged --quiet; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No changes detected"
          else
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Changes detected"
          fi
      - name: Create PR if changes exist
        if: steps.changes.outputs.changed == 'true'
        run: |
          TIMESTAMP=$(date +%s)
          BRANCH_NAME="auto-update-$TIMESTAMP"
          
          # Create new branch
          git checkout -b "$BRANCH_NAME"
          
          # Commit changes
          git add merged_jobs.csv
          git commit -m "Auto update merged_jobs.csv [skip ci]"
          
          # Push to new branch
          git push origin "$BRANCH_NAME"
          
          # Create PR using GitHub CLI
          gh pr create \
            --title "Auto update: merged_jobs.csv" \
            --body "Automated update of merged_jobs.csv generated by GitHub Actions." \
            --base main \
            --head "$BRANCH_NAME" \
            --label "automation,data-update"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
