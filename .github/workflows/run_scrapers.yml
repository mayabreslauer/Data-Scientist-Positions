name: Run all scrapers and open PR
on:
  workflow_dispatch:   # ריצה ידנית בלבד

permissions:
  contents: write
  pull-requests: write
  issues: write

concurrency:
  group: scrapers-${{ github.workflow }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          ref: main

      - name: Check if similar PR is already open
        id: pr_check
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # חיפוש PR פתוח עם אותה כותרת או תוויות
          OPEN_PR=$(gh pr list --state open --label "automation" --label "data-update" --json number -q '.[0].number')
          if [ -n "$OPEN_PR" ] && [ "$OPEN_PR" != "null" ]; then
            echo "Found open PR #$OPEN_PR with automation/data-update labels. Stopping workflow."
            echo "pr_open=true" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "No open PR found with automation/data-update labels."
            echo "pr_open=false" >> $GITHUB_OUTPUT
          fi

      - name: Sync with remote main
        if: steps.pr_check.outputs.pr_open == 'false'
        run: |
          git fetch origin main
          git checkout main
          git reset --hard origin/main

      - name: Set up Python
        if: steps.pr_check.outputs.pr_open == 'false'
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        if: steps.pr_check.outputs.pr_open == 'false'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_scraper.txt

      - name: Run all scrapers
        if: steps.pr_check.outputs.pr_open == 'false'
        env:
          SERPER_API_KEY: ${{ secrets.SERPER_API_KEY }}
        run: python run_all.py

      - name: Check if merged_jobs.csv changed
        if: steps.pr_check.outputs.pr_open == 'false'
        id: changes
        run: |
          if git diff --quiet -- merged_jobs.csv; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No changes"
          else
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Changes detected"
          fi

      - name: Configure Git
        if: steps.changes.outputs.changed == 'true' && steps.pr_check.outputs.pr_open == 'false'
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Ensure labels exist
        if: steps.changes.outputs.changed == 'true' && steps.pr_check.outputs.pr_open == 'false'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api -X POST "repos/${{ github.repository }}/labels" \
            -f name='automation' -f color='ededed' -f description='Automated updates' || true
          gh api -X POST "repos/${{ github.repository }}/labels" \
            -f name='data-update' -f color='0366d6' -f description='Data update PRs' || true

      - name: Create branch, commit and push
        if: steps.changes.outputs.changed == 'true' && steps.pr_check.outputs.pr_open == 'false'
        id: push_branch
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          TS=$(date +%s)
          BRANCH="auto-update-${TS}"

          git checkout -b "$BRANCH"
          git add merged_jobs.csv
          git commit -m "Auto update merged_jobs.csv [skip ci]"
          git push --set-upstream origin "$BRANCH"

          echo "branch=$BRANCH" >> $GITHUB_OUTPUT

      - name: Open PR (with labels)
        if: steps.changes.outputs.changed == 'true' && steps.pr_check.outputs.pr_open == 'false'
        id: open_pr
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_URL=$(gh pr create \
            --title "Auto update: merged_jobs.csv" \
            --body "Automated update of merged_jobs.csv generated by GitHub Actions." \
            --base main \
            --head "${{ steps.push_branch.outputs.branch }}" \
            --label "automation,data-update")
          echo "url=$PR_URL" >> $GITHUB_OUTPUT
          PR_NUMBER=$(gh pr view "$PR_URL" --json number -q .number)
          echo "number=$PR_NUMBER" >> $GITHUB_OUTPUT
          echo "Opened PR: #$PR_NUMBER ($PR_URL)"

      - name: Enable auto-merge
        if: steps.changes.outputs.changed == 'true' && steps.pr_check.outputs.pr_open == 'false'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR="${{ steps.open_pr.outputs.number }}"
          gh pr merge "$PR" --squash --auto --delete-branch || \
          gh pr merge "$PR" --squash --delete-branch || \
          echo "Could not merge immediately; PR left open."
