name: Run all scrapers and open PR
on:
  workflow_dispatch:
  schedule:
    - cron: '0 */12 * * *'

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: scrapers-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo (track main)
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          ref: main

      - name: Sync with origin/main
        run: |
          git fetch origin main
          git checkout main
          git reset --hard origin/main

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_scraper.txt

      - name: Run all scrapers
        env:
          SERPER_API_KEY: ${{ secrets.SERPER_API_KEY }}
        run: python run_all.py

      - name: Check if merged_jobs.csv changed
        id: changes
        run: |
          if git diff --quiet -- merged_jobs.csv; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No changes"
          else
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Changes detected"
          fi

      - name: Configure Git
        if: steps.changes.outputs.changed == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create branch & commit
        if: steps.changes.outputs.changed == 'true'
        run: |
          # הגנה: לא לבצע commit על main
          CURR_BRANCH="$(git rev-parse --abbrev-ref HEAD)"
          if [ "$CURR_BRANCH" = "main" ]; then
            TS=$(date +%s)
            BRANCH="auto-update-$TS"
            git switch -c "$BRANCH"
          else
            BRANCH="$CURR_BRANCH"
          fi

          # לוודא עדכניות לפני יצירת ה-branch
          git fetch origin main
          git rebase origin/main || git rebase --abort

          git add merged_jobs.csv
          git commit -m "Auto update merged_jobs.csv [skip ci]" || echo "Nothing to commit"

          echo "branch=$BRANCH" >> $GITHUB_OUTPUT
        shell: bash

      - name: Push branch
        if: steps.changes.outputs.changed == 'true'
        run: |
          # הגנה: אל תדחוף ל-main
          if [ "${{ steps.create_branch_and_commit.outputs.branch }}" = "main" ]; then
            echo "Refusing to push to main"; exit 1
          fi
          git push --set-upstream origin "${{ steps.create_branch_and_commit.outputs.branch }}"
        id: push_branch
        shell: bash

      - name: Open PR
        if: steps.changes.outputs.changed == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create \
            --title "Auto update: merged_jobs.csv" \
            --body "Automated update of merged_jobs.csv" \
            --base main \
            --head "${{ steps.create_branch_and_commit.outputs.branch }}" \
            --label "automation,data-update"
